// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id       String   @id @default(uuid()) @db.Uuid
  email    String   @unique @db.VarChar(255)
  name     String   @db.VarChar(255)
  password String   @db.VarChar(255)
  posts    Post[]
  profile  Profile?
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?  @db.Text
  published Boolean  @default(false)
  authorId  String   @db.Uuid
  author    User     @relation(fields: [authorId], references: [id])
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId String  @unique @db.Uuid
  user   User    @relation(fields: [userId], references: [id])
}

model Revenue {
  month   String @id @db.VarChar(4) // Unique constraint will be enforced by the @id directive
  revenue Int
}

model Customer {
  id        String    @id @default(uuid()) @db.Uuid
  name      String    @db.VarChar(255)
  email     String    @db.VarChar(255)
  image_url String    @db.VarChar(255)
  invoices  Invoice[]
}

model Invoice {
  id          String   @id @default(uuid()) @db.Uuid
  customer_id String   @db.Uuid
  amount      Int
  status      String   @db.VarChar(255)
  date        DateTime @db.Date
  customer    Customer @relation(fields: [customer_id], references: [id])
}
